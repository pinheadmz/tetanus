use num_bigint::BigInt;

use tetanus::*;

#[test]
fn test_fast_pow() {
    assert_eq!(
        fast_pow(
            BigInt::parse_bytes(b"12", 10).unwrap(),
            BigInt::parse_bytes(b"9", 10).unwrap()),
        BigInt::parse_bytes(b"5159780352", 10).unwrap());
    assert_eq!(
        fast_pow(
            BigInt::parse_bytes(b"94380", 10).unwrap(),
            BigInt::parse_bytes(b"239", 10).unwrap()),
        BigInt::parse_bytes(b"9915475565664474247908907587842678231286547904949270746471735976143354540876767420081830013583361997697197275499906189634255462768402784345486497599611727357207826076755736771488158245641682722314793784287472862427001229624750999693888270440705011404332527194695775513293858599468135880386017104972179120701545239736006145077111814842482955119062209109857180778283239405767120224310665748330372952974288102923318491359525297631916334788683011125526170197872929779470790330321204967187244144484016857270300327235519849840998696860339228154057672586368420782004429165583298070837152394141614054390645288802888437032271247286373877719005408263575681905465145740676601911231403983557473748987458999115238143091295782534907272024638050334183895283640984780259054139557335352749632094548633433838730492586694623078077702096125592138795085725571078486866450212688153425485524782603998399569221539904872789075399166113952372187006934567645669721615426073395200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 10).unwrap());
    assert_eq!(
        fast_pow(
            BigInt::parse_bytes(b"333", 10).unwrap(),
            BigInt::parse_bytes(b"444", 10).unwrap()),
        BigInt::parse_bytes(b"9230807129241764448885616320583540045479530253259406735065985216617990730919881112328849103285135376081878486348473472388462222819360993740290983928209254622077173254795275346693033770781527396930282882216584854831090968717563745086706374589391907503122909869042661021255805684067131170236629741824830474943321467115928675505491105928553912354028100269442162629014279481204779505132605346209921277379309773459582541323721056156883714950388707721941016473884346767332056077482324999220545491909097865289348886825001906107907364900585204382363299783603222214949055145842195613071990288012389640115918605533066350964239203288504489484585719193092687582479019066495366296634676542900145619839154964129834417386101651702532589198324031573878943352353447337367982912778289172240659728133872713086594174755367080461064258067508082644719918815397475658139171641789793651785063520979827574244829295330952975442270078672153929465464780002623020969353008225256705836674388729690957672162694677337349496056166321839163079987967767436641657621458755531260692965508099281712857128665757371634125862088552147754979848082518517659377521", 10).unwrap());

    assert_eq!(
        fast_pow_mod(
            BigInt::parse_bytes(b"28139", 10).unwrap(),
            BigInt::parse_bytes(b"9283", 10).unwrap(),
            BigInt::parse_bytes(b"23", 10).unwrap()),
        BigInt::parse_bytes(b"7", 10).unwrap());
    assert_eq!(
        fast_pow_mod(
            BigInt::parse_bytes(b"66", 10).unwrap(),
            BigInt::parse_bytes(b"77", 10).unwrap(),
            BigInt::parse_bytes(b"88888", 10).unwrap()),
        BigInt::parse_bytes(b"28936", 10).unwrap());
}

#[test]
fn test_gcd() {
    assert_eq!(
        gcd(
            BigInt::parse_bytes(b"1071", 10).unwrap(),
            BigInt::parse_bytes(b"462", 10).unwrap()),
        BigInt::parse_bytes(b"21", 10).unwrap());
    assert_eq!(
        gcd(
            BigInt::parse_bytes(b"91283", 10).unwrap(),
            BigInt::parse_bytes(b"12311", 10).unwrap()),
        BigInt::parse_bytes(b"1", 10).unwrap());
    assert_eq!(
        gcd(
            BigInt::parse_bytes(b"2940", 10).unwrap(),
            BigInt::parse_bytes(b"3150", 10).unwrap()),
        BigInt::parse_bytes(b"210", 10).unwrap());
}

#[test]
fn test_mod_inverse() {
    assert_eq!(
        mod_inverse(
            BigInt::parse_bytes(b"3", 10).unwrap(),
            BigInt::parse_bytes(b"11", 10).unwrap()),
        BigInt::parse_bytes(b"4", 10).unwrap());
    assert_eq!(
        mod_inverse(
            BigInt::parse_bytes(b"123456789", 10).unwrap(),
            BigInt::parse_bytes(b"1000000007", 10).unwrap()),
        BigInt::parse_bytes(b"18633540", 10).unwrap());
}
